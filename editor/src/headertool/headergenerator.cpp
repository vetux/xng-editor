/**
 *  This file is part of xEngine, a C++ game engine library.
 *  Copyright (C) 2023  Julian Zampiccoli
 *
 *  This program is free software; you can redistribute it and/or modify
 *  it under the terms of the GNU Lesser General Public License as published by
 *  the Free Software Foundation; either version 2 of the License, or
 *  (at your option) any later version.
 *
 *  This program is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY; without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *  GNU Lesser General Public License for more details.
 *
 *  You should have received a copy of the GNU Lesser General Public License along
 *  with this program; if not, write to the Free Software Foundation, Inc.,
 *  51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.
 */

#include <stdexcept>

#include "headertool/headergenerator.hpp"

namespace xng {
    std::string HeaderGenerator::generateHeader(const ComponentMetadata &metadata) {
        std::string ret = R"###(// Contents generated by xng header tool (https://github.com/vetux/xng).

#undef XGENERATED_OPERATORS

#define XGENERATED_OPERATORS() virtual xng::Messageable &operator<<(const xng::Message &message) override { \
)###";

        // Deserializers
        for (auto &member: metadata.members) {
            std::string line = "        message.value(\"" + member.instanceName + "\", " + member.instanceName;
            if (!member.defaultValue.empty()){
                line += ", " + member.defaultValue;
            }
            line += R"###(); \
)###";
            ret += line;
        }

        ret += R"###(        return *this; \
} \
virtual xng::Message &operator>>(xng::Message &message) const override { \
        message = xng::Message(xng::Message::DICTIONARY); \
)###";

        // Serializers
        for (auto &member: metadata.members){
            ret += "        " + member.instanceName + " >> message[\"" + member.instanceName + R"###("]; \
)###";
        }

        ret += "        return message; \\\n}\n";

        return ret;
    }
}